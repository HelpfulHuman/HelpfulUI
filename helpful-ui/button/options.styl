@require '../config'
@require '../helpers/units'

$hui.button = merge({

  /**
   * ENABLE
   *
   * Enables the module and features when set to "true".
   */
  enabled: true

  /**
   * SELECTOR NAME
   *
   * Change the selector name for the component.
   */
  selector: 'button'

  /**
   * USE AUTOMATIC CONVERSIONS
   *
   * When set to "true", units like "height" and "line-height" will auto-
   * matically be converted to the preferred unit type using the "pref()"
   * method.
   */
  convert-units: true

  /**
   * VARIANTS
   *
   * These are the rules that will be applied for the different variations
   * of the module.  The "default" variant will be used as the base, whereas
   * additional variants will be available as "modifiers" matching the related
   * key name.
   */
  variants: {

    // default button state
    default: {
      display: block
      margin: 0
      padding: 0 1em
      width: 100%
      height: $hui.theme.control.height
      line-height: false
      cursor: pointer
      user-select: none
      overflow: ellipsis
      text-align: center
      vertical-align: middle
      font-size: $hui.theme.control.font-size
      font-style: inherit
      font-weight: inherit
      border-radius: $hui.theme.control.border-radius
      box-shadow: $hui.theme.control.box-shadow
      border: none

      // hover state
      '&:hover': {
        text-decoration: none
      }

      '&:focus': {
        outline: 0
      }

      // disabled state
      '&:disabled': {
        cursor: not-allowed
      }
    }

  }

}, $hui.button)

// run any recommended conversions...
if $hui.button.convert-units
  $hui.button.variants.default.line-height = $hui.button.variants.default.height $hui.button.variants.default.font-size
  $hui.button.variants.default.height = pref($hui.button.variants.default.height, $hui.button.variants.default.font-size)

  if $hui.button.variants.default.font-size is $hui.font-size
    remove($hui.button.variants.default, 'font-size')
